AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Parameters:
  LambdaRoleArn:
    Type: String
    Default: ""

Conditions:
  LambdaRoleRequired:
    Fn::Equals: [ { Ref: LambdaRoleArn }, "" ]

Resources:
  # --------------------------------------------------------
  # Lambda functions
  Handler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build
      Handler: main
      Runtime: go1.x
      CodeUri: build
      Timeout: 30
      MemorySize: 128
      ReservedConcurrentExecutions: 1
      Role:
        Fn::If: [ LambdaRoleRequired, {"Fn::GetAtt": LambdaRole.Arn}, {Ref: LambdaRoleArn} ]
      Environment:
        Variables:
          FOO_VAR: test
#      Events:
#        ReportLine:
#          Type: SNS
#          Properties:
#            Topic: xxx

  # --------------------------------------------------------
  # IAM Roles
  LambdaRole:
    Type: AWS::IAM::Role
    Condition: LambdaRoleRequired
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: ["lambda.amazonaws.com"]
            Action: ["sts:AssumeRole"]
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
#      Policies:
#        - PolicyName: "AlertResponderLambdaPolicy"
#          PolicyDocument:
#            Version: "2012-10-17"
#            Statement:
#              - Effect: "Allow"
#                Action:
#                  - s3:GetObject
#                Resource:
#                  - arn:aws:s3:::my_corporate_bucket/*
